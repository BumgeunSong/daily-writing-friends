rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAuthor(authorId) {
      return isAuthenticated() && request.auth.uid == authorId;
    }

    // Users collection - users can read/write their own data
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      
      // User subcollections (notifications, writing histories, etc.)
      match /{subcollection=**} {
        allow read, write: if isOwner(userId);
      }
    }

    // Boards collection - authenticated users can read all boards
    match /boards/{boardId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only admins should create boards
      
      // Posts within boards
      match /posts/{postId} {
        allow read: if isAuthenticated() && (
          // Public posts are readable by all authenticated users
          resource.data.visibility == 'PUBLIC' ||
          // Authors can always read their own posts
          isAuthor(resource.data.authorId)
        );
        allow create: if isAuthenticated() && 
          request.auth.uid == request.resource.data.authorId;
        allow update, delete: if isAuthenticated() && 
          isAuthor(resource.data.authorId);
        
        // Comments within posts
        match /comments/{commentId} {
          allow read: if isAuthenticated();
          allow create: if isAuthenticated() && 
            request.auth.uid == request.resource.data.userId;
          allow update, delete: if isAuthenticated() && 
            isOwner(resource.data.userId);
          
          // Replies within comments
          match /replies/{replyId} {
            allow read: if isAuthenticated();
            allow create: if isAuthenticated() && 
              request.auth.uid == request.resource.data.userId;
            allow update, delete: if isAuthenticated() && 
              isOwner(resource.data.userId);
          }
        }
      }
    }

    // Topic cards - readable by all authenticated users
    match /topicCards/{cardId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only admins should manage topic cards
    }

    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}